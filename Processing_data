# -*- coding: utf-8 -*-
"""
Created on Tue Aug  8 13:18:26 2023

@author: USER
"""
# plantilla de procesado
# Como importar librerias

import numpy as np
import matplotlib as plt
import pandas as pd



# import dataset
dataset = pd.read_csv('Data.csv')
x = dataset.iloc [:,  :-1]
y = dataset.iloc [: ,3]

#tratamiento de NAs
from sklearn.preprocessing import Imputer
Imputer = Imputer (missing_values = "NaN", strategy = "mean", axis = 0) # axis=0 columnas
Imputer = Imputer.fit(x[ : , 1:3])
x[ : ,1:3] = Imputer.transform(x[ : ,1:3])

# codificar datos categoricos
from sklearn.preprocessing import Labelencoder, OnehotEncoder
Labelencoder_x = Labelencoder()
x[ : ,0]=Labelencoder_x.fit_transform(x[ : ,0])
OnehotEncoder = OnehotEncoder(categorical_features = [0])
x = OnehotEncoder.fit_transform(x).toarray()
Labelencoder_y = Labelencoder()
y = Labelencoder_y(y)

# Dividir el dataset en conjunto de entrenamiento y conjunto de testing
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split (x,y,test_size = 0.2, random_state =0)
# random state=0 para siempre obtener el mismo resultado

# Escalar datos, 2 formulas principales
# Standarized  = Xstd = (X - media) / dev. std
# Normalized   = X norm = (x - min(x)) / (max (x))- min(x) 

from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
x_train = sc_x.fit_transform (x_train)
x_test = sc_x.transform (x_test)
